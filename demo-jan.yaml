apiVersion: backstage.io/v1alpha1
kind: Domain
metadata:
  name: demo-jan-domain
  description: demo-jan Domain for Tanzu Application Platform
  annotations:
    'backstage.io/techdocs-ref': dir:.
spec:
  owner: demo-jan-team

---

apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: demo-jan-app-ms-1
  description: demo-jan Application's Microservice-1
  tags:
    - microservice
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=demo-jan-app-ms-1'
    'backstage.io/techdocs-ref': dir:.
spec:
  type: service
  providesApis:
   - demo-jan-api
  lifecycle: alpha
  owner: demo-jan-team
  system: demo-jan-app

---

apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: demo-jan-app-ms-2
  description: demo-jan Application's Microservice-2
  tags:
    - microservice
  annotations:
    'backstage.io/kubernetes-label-selector': 'app.kubernetes.io/part-of=demo-jan-app-ms-2'
    'backstage.io/techdocs-ref': dir:.
spec:
  type: service
  consumesApis:
   - demo-jan-api
  lifecycle: alpha
  owner: demo-jan-team
  system: demo-jan-app

---

apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: demo-jan-app
  description: demo-jan Application for Tanzu Application Platform
  annotations:
    'backstage.io/techdocs-ref': dir:.
spec:
  owner: demo-jan-team
  domain: demo-jan-domain

---

apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: partnertapdemo-jan-api
  description: The demo-jan API for Tanzu Application Platform GUI
  links:
    - url: https://harbor.dieunkrauts.de/devcenter-api-2.0
      title: API Definition
      icon: docs
spec:
  type: openapi
  lifecycle: experimental
  owner: demo-jan-team
  system: demo-jan-app # Or specify system name of your choice
  definition: |
    openapi: 3.0.1
    info:
      title: demo-jan API
      description: defaultDescription
      version: '0.1'
    servers:
      - url: https://harbor.dieunkrauts.de/devcenter-api-2.0
    paths:
      /:
        get:
          description: Auto generated using Swagger Inspector
          parameters:
            - name: name
              in: query
              schema:
                type: string
              example: type_any_name
          responses:
            '200':
              description: Auto generated using Swagger Inspector
              content:
                application/json; charset=utf-8:
                  schema:
                    type: string
                  examples: {}